package com.example.demo.controller;

import java.util.List;
import java.util.Optional;

import javax.validation.Valid;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;

import com.example.demo.model.Employee;
import com.example.demo.service.EmployeeServiceImpl;

@Controller
@RequestMapping("/employees")
public class EmployeeController
{
	@Autowired
	private EmployeeServiceImpl employeeservice;
	
	
	
	@GetMapping("/list")
	public String getEmployee(Model theModel)
	{
		theModel.addAttribute("employeeList", employeeservice.getAllEmployees());
		return "employeelist";
	}
	
	
	
	@GetMapping("/showFormForAdd")
	public String showFormForAdd(Model theModel)
	{
		Employee theEmployee = new Employee();
		theModel.addAttribute("employee", theEmployee);
		return "employees/employeeForm";
	}
	
	
	
	@PostMapping("/save")
	public String saveEmployee(@ModelAttribute("employee") @Valid Employee theEmployee, BindingResult bindingResult)
	{
		
		if (bindingResult.hasErrors())
		{
			return "employees/employeeForm";
		}
		else
		{
			employeeservice.save(theEmployee);
			return "redirect:/employees/list";
		}
	}
	
	
	
	
	@GetMapping("/showFormForUpdate")
	public String showFormForUpdate(@RequestParam("employeeId") int theId, Model theModel)
	{
		Employee theEmployee = employeeservice.findById(theId);
		theModel.addAttribute("employee", theEmployee);
		return "employees/employeeForm";
	}
	
	
	@PostMapping("/deleteEmployee")
	public String deleteEmployee(@RequestParam("employeeId") int theId)
	{
		employeeservice.deleteById(theId);
		return "redirect:/employees/list";
	}
	
	
	@GetMapping("/search")
	public String search(@RequestParam("firstName") String theFirstName, @RequestParam("lastName") String theLastName, @RequestParam("email") String theEmail , Model theModel) 
	{
		// check names, if both are empty then just give list of all employees

		if (theFirstName.trim().isEmpty() && theLastName.trim().isEmpty() && theEmail.trim().isEmpty()) {
			return "redirect:/employees/list";
		}
		else {
			// else, search by first name and last name
			List<Employee> theEmployees = employeeservice.searchBy(theFirstName, theLastName, theEmail);
			
			// add to the spring model
			theModel.addAttribute("employeeList", theEmployees);
			
			// send to list-employees
			return "employeelist";
		}
		
	}
	
	
}
